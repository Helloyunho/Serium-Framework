{
  "status": {
    "code": {
      "statusText": "",
      "enviroment": "",
      "description": ""
    }
  },
  "Information_Respones": {
    "100": {
      "statusText": "Continue",
      "enviroment": "only HTTP/1.1",
      "description": "This interim response indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished."
    },
    "101": {
      "statusText": "Switching Protocol",
      "enviroment": "only HTTP/1.1",
      "description": "This code is sent in response to an Upgrade: request header by the client, and indicates that the protocol the server is switching too. It was introduced to allow migration to an incompatible protocol version, and is not in common use."
    }
  },
  "Success_Respones": {
    "200": {
      "statusText": "OK",
      "enviroment": "after HTTP/0.9",
      "description": "The request has succeeded. The meaning of a success varies depending on the HTTP method:\nGET: The resource has been fetched and is transmitted in the message body.\nHEAD: The entity headers are in the message body.\nPOST: The resource describing the result of the action is transmitted in the message body.\nTRACE: The message body contains the request message as received by the server"
    },
    "201": {
      "statusText": "Created",
      "enviroment": "after HTTP/0.9",
      "description": "The request has succeeded and a new resource has been created as a result of it. This is typically the response sent after a PUT request."
    },
    "202": {
      "statusText": "Accepted",
      "enviroment": "after HTTP/0.9",
      "description": "The request has been received but not yet acted upon. It is non-committal, meaning that there is no way in HTTP to later send an asynchronous response indicating the outcome of processing the request. It is intended for cases where another process or server handles the request, or for batch processing."
    },
    "203": {
      "statusText": "Non-Authoritative Information",
      "enviroment": "only HTTP/0.9 and HTTP/1.1",
      "description": "This response code means returned meta-information set is not exact set as available from the origin server, but collected from a local or a third party copy. Except this condition, 200 OK response should be preferred instead of this response."
    },
    "204": {
      "statusText": "No Content",
      "enviroment": "after HTTP/0.9",
      "description": "There is no content to send for this request, but the headers may be useful. The user-agent may update its cached headers for this resource with the new ones."
    },
    "205": {
      "statusText": "Reset Content",
      "enviroment": "only HTTP/1.1",
      "description": "This response code is sent after accomplishing request to tell user agent reset document view which sent this request."
    },
    "206": {
      "statusText": "Partial Content",
      "enviroment": "only HTTP/1.1",
      "description": "This response code is used because of range header sent by the client to separate download into multiple streams."
    }
  },
  "Redirection_Messages": {
    "300": {
      "statusText": "Multiple Choice",
      "enviroment": "after HTTP/1.0",
      "description": "The request has more than one possible responses. User-agent or user should choose one of them. There is no standardized way to choose one of the responses."
    },
    "301": {
      "statusText": "Moved Permanently",
      "enviroment": "after HTTP/0.9",
      "description": "This response code means that URI of requested resource has been changed. Probably, new URI would be given in the response."
    },
    "302": {
      "statusText": "Found",
      "enviroment": "after HTTP/0.9",
      "description": "This response code means that URI of requested resource has been changed temporarily. New changes in the URI might be made in the future. Therefore, this same URI should be used by the client in future requests."
    },
    "303": {
      "statusText": "See Other",
      "enviroment": "only HTTP/0.9 and HTTP/1.1",
      "description": "Server sent this response to directing client to get requested resource to another URI with an GET request."
    },
    "304": {
      "statusText": "Not Modified",
      "enviroment": "after HTTP/0.9",
      "description": "This is used for caching purposes. It is telling to client that response has not been modified. So, client can continue to use same cached version of response."
    },
    "305": {
      "statusText": "Use Proxy",
      "enviroment": "only HTTP/1.1",
      "description": "This means requested response must be accessed by a proxy. This response code is not largely supported because security reasons."
    },
    "306": {
      "statusText": "unused",
      "enviroment": "only HTTP/1.1",
      "description": "This response code is no longer used, it is just reserved currently. It was used in a previous version of the HTTP 1.1 specification."
    },
    "307": {
      "statusText": "Temporary Redirect",
      "enviroment": "only HTTP/1.1",
      "description": "Server sent this response to directing client to get requested resource to another URI with same method that used prior request. This has the same semantic than the 302 Found HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request."
    },
    "308": {
      "statusText": "Permanent Redirect",
      "enviroment": "draft-reschke-http-status-308",
      "description": "This means that the resource is now permanently located at another URI, specified by the Location: HTTP Response header. This has the same semantics as the 301 Moved Permanently HTTP response code, with the exception that the user agent must not change the HTTP method used: if a POST was used in the first request, a POST must be used in the second request.\nNote: This is an experimental response code whose specification is currently in draft form."
    }
  },
  "Client_Error_Respones": {
    "400": {
      "statusText": "Bad Request",
      "enviroment": "after HTTP/0.9",
      "description": "This response means that server could not understand the request due to invalid syntax."
    },
    "401": {
      "statusText": "Unauthorized",
      "enviroment": "after HTTP/0.9",
      "description": "Authentication is needed to get requested response. This is similar to 403, but in this case, authentication is possible."
    },
    "402": {
      "statusText": "Payment Required",
      "enviroment": "only HTTP/0.9 and HTTP/1.1",
      "description": ""
    }
  }
}
